import random
from pico2d import*

def handle_events():
    global running
    global status
    global number
    global mousex
    global mousey

    events = get_events()
    for event in events:
        if event.type == SDL_QUIT:
            running = False
        if event.type == SDL_KEYDOWN:
            if event.key == SDLK_0:
                number = 0
            elif event.key == SDLK_1:
                number = 1
            elif event.key == SDLK_2:
                number = 2
            elif event.key == SDLK_3:
                number = 3
            elif event.key == SDLK_4:
                number = 4
            elif event.key == SDLK_5:
                number = 5
            elif event.key == SDLK_6:
                number = 6
            elif event.key == SDLK_7:
                number = 7
            elif event.key == SDLK_8:
                number = 8
            elif event.key == SDLK_9:
                number = 9
            elif event.key == SDLK_a:
                number = 10

        elif event.type == SDL_MOUSEMOTION:
            mousex = event.x
            mousey = 600 - event.y
        else:
            status = 0

class Grass:
    def __init__(self):
        self.image = load_image('grass.png')
    def draw(self):
        self.image.draw(400, 30)

class Boy:
    image = None

    LEFT_RUN, RIGHT_RUN, LEFT_STAND, RIGHT_STAND = 0, 1, 2, 3

    def __init__(self):
        self.x = random.randint(100, 700),90
        self.frame = random.randint(0, 7)
        self.dir = 1
        self.state = self.RIGHT_RUN
        if Boy.image == None:
            self.image = load_image('run_animation.png')

    def update(self):
        self.frame = (self.frame + 1) % 8
        self.x += (self.dir*3)
        if self.x > 800:
            self.dir = -1
            self.x = 800
            self.state = self.LEFT_RUN
        elif self.x < 0 :
            self.dir = 1
            self.x = 0
            self.state = self.RIGHT_RUN

    def update_mouse(self):
        self.frame = (self.frame + 1) % 8
        if self.x > mousex:
            self.x -= 2
        else :
            self.x += 2
        if self.y > mousey:
            self.y -= 2
        else:
            self.y += 2

    def handle_left_run(self):
        self.x -= 3
        self.run_frame +=1
        if self.x < 0:
            self.state = self.RIGHT_RUN
            self.x = 0
        elif self.run_frame == 100:
            self.state = self.LEFT_STAND
            self.stand_frame = 0
    def handle_left_stand(self):
        self.stand_frame += 1
        if self.stand_frame == 50:
            self.state = self.LEFT_RUN
            self.run_frame = 0
    def handle_right_run(self):
        self.x += 3
        self.run_frame +=1
        if self.x > 800:
            self.state = self.LEFT_RUN
            self.x = 800
        if self.run_frame == 100:
            self.state = self.RIGHT_STAND
            self.stand_frame = 0
    def handle_right_stand(self):
        self.stand_frame += 1
        if self.stand_frame == 50:
            self.state = self.RIGHT_RUN
            self.run_frame = 0
    handle_state = {
        LEFT_RUN : handle_left_run(),
        RIGHT_RUN : handle_right_run(),
        LEFT_STAND : handle_left_stand(),
        RIGHT_STAND : handle_right_stand()
    }
    def draw(self):
        self.image.clip_draw(self.frame*100, self.state*100, 100, 100, self.x, self.y)

def main():
    open_canvas()
    boy = Boy()
    grass = Grass()
    running = True

    while running:
        handle_events()

        boy.update()

        clear_canvas()
        grass.draw()
        boy.draw()
        update_canvas()

        delay(0.05)
    close_canvas()


if __name__== '__main__':
    main()





